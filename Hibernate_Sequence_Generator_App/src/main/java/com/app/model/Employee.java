package com.app.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/* create sequence <sequence-name> start with <int-value> increment by <int-value>; 
 * Ex: create sequence employee_seq start with 100 increment by 1; */

@Entity
@Table(name = "EMPLOYEE_SEQUENCE_TAB")
public class Employee {
	@Id
	@Column(name = "EID")
	
	/*In this way Hibernate requests the primary key value from a database sequence.primary key is generated by database.
	@GeneratedValue(strategy = GenerationType.SEQUENCE)*/
	
	/* In this case if the sequence is not existed in yhe DB then it will create a new one by taking these details.
	 * If the sequence is already existed in the DB,then it will use that sequence.In this condition if we are not providing the 'initialvalue' then no 
	   problem because it will use the pre-existing DB sequence initialValue,But 'allocationSize' of @SequenceGenerator cannot be greater than pre existing
	   database sequence's 'increment' value otherwise it throw error.
	@GeneratedValue(generator = "seqgen")
	@SequenceGenerator(name = "seqgen",sequenceName = "employee_seq",initialValue = 100,allocationSize = 1)*/
	
	/*In this case it will create a sequence in the DB by using these details and use that sequence in this application*/ 
	@GeneratedValue(generator ="seqgen")
	@GenericGenerator(name = "seqgen",
	                  strategy = "sequence",
	                  parameters = {
	                		  @Parameter(name="sequence_name", value = "employee_seq"),
	                		  @Parameter(name = "initial_value", value = "101"),
	                		  @Parameter(name = "increment_size", value = "1")
	                  }
	)
	private int empId;
	
	@Column(name = "ENAME")
	private String empName;
	
	@Column(name = "ESAL")
	private int empSal;

	public int getEmpId() {
		return empId;
	}

	public void setEmpId(int empId) {
		this.empId = empId;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public int getEmpSal() {
		return empSal;
	}

	public void setEmpSal(int empSal) {
		this.empSal = empSal;
	}

	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empName=" + empName + ", empSal=" + empSal + "]";
	}
	
	
}//class
